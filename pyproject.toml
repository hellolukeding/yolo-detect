[project]
name = "yolo-detect"
version = "0.1.0"
description = ""
authors = [
    {name = "lukeding",email = "dingkai9627@outlook.com"}
]
readme = "README.md"
python = ">=3.11"
dependencies = [
    "ultralytics (>=8.3.214,<9.0.0)",
    "torch (>=2.8.0,<3.0.0)",
    "torchvision (>=0.23.0,<0.24.0)",
    # 注意：标准的 opencv-python 不包含 GStreamer 支持
    # 在需要推流功能的硬件设备上，请使用以下命令替换：
    # pip uninstall opencv-python
    # pip install opencv-contrib-python 或从源码编译
    "opencv-python (>=4.12.0.88,<5.0.0.0)",
    "tqdm (>=4.67.1,<5.0.0)",
    "matplotlib (>=3.10.7,<4.0.0)",
    "numpy (>=2,<2.3.0)",
    "pillow (>=11.3.0,<12.0.0)",
    "polars (>=1.34.0,<2.0.0)",
    "pyyaml (>=6.0.3,<7.0.0)",
    "psutil (>=7.1.0,<8.0.0)",
    "requests (>=2.32.5,<3.0.0)",
    "scipy (>=1.16.2,<2.0.0)",
    "ultralytics-thop (>=2.0.17,<3.0.0)",
    "loguru (>=0.7.3,<0.8.0)",
    "lap (>=0.5.12,<0.6.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11,<3.14"

[tool.poetry.group.dev.dependencies]
black = "^25.9.0"
isort = "^7.0.0"
flake8 = "^7.3.0"

[[tool.poetry.source]]
name = "tuna"
url = "https://pypi.tuna.tsinghua.edu.cn/simple"
priority = "primary"

[tool.black]
line-length = 120
target-version = ['py311']
extend-exclude = '''
/(
  # 不格式化这些文件
  \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = true
# 跳过测试文件中需要特殊导入顺序的文件
skip = ["test/test_push.py", "test/test_push_ffmpeg.py"]
